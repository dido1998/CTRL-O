# @package _global_
# Evaluate center crop oracle masks on COCO, with instance and panoptic metrics.
#
# Requires instance and panoptic masks in the dataset.

defaults:
  - /evaluation_config
  - /evaluation/projects/bridging/_base_metrics
  - /evaluation/projects/scaling/_preprocessing_coco
  - /evaluation/projects/scaling/_preprocessing_coco_panoptic
  - /evaluation/projects/scaling/_preprocessing_to_ccrop_masks
  - /evaluation/projects/scaling/_preprocessing_to_ccrop_image
  - /evaluation/projects/scaling/_metrics_discovery_masks
  - /evaluation/projects/scaling/_metrics_panoptic
  - /evaluation/projects/scaling/_metrics_segmentation
  - /dataset: coco
  - _self_

eval_batch_size: 16

experiment:
  image_size: 224
  mask_size: 320

modules:
  oracle_masks:
    _target_: routed.ocl.utils.masking.FilterAndExpandMasks
    masks_path: input.panoptic_mask_for_oracle
    keep_n_largest: 7

evaluation_metrics:
  instance_ari:
    prediction_path: oracle_masks
  instance_ari_min2:
    prediction_path: oracle_masks
  instance_iou:
    prediction_path: oracle_masks
  instance_mbo:
    prediction_path: oracle_masks
  instance_corloc:
    prediction_path: oracle_masks
  instance_recovery:
    prediction_path: oracle_masks
  segmentation_ari:
    prediction_path: oracle_masks
  segmentation_iou:
    prediction_path: oracle_masks
  segmentation_mbo:
    prediction_path: oracle_masks
  panoptic_ari_min2:
    prediction_path: oracle_masks
  panoptic_quality:
    prediction_path: oracle_masks
  panoptic_segm_quality:
    prediction_path: oracle_masks
  panoptic_recog_quality:
    prediction_path: oracle_masks

dataset:
  eval_transforms:
    02z_preprocessing_for_oracle:
      _target_: ocl.transforms.Map
      transform:
        _target_: torchvision.transforms.Compose
        transforms:
          - _target_: ocl.preprocessing.CopyFields
            mapping:
              panoptic_mask: panoptic_mask_for_oracle
          - _target_: ocl.preprocessing.InstanceMasksToDenseMasks
            instance_mask_key: panoptic_mask_for_oracle
            category_key: panoptic_category
          - _target_: ocl.preprocessing.AddEmptyMasks
            mask_keys:
              - panoptic_mask_for_oracle
      fields:
        - image
        - panoptic_mask
        - panoptic_category
      batch_transform: false
    03b_preprocessing:
      transforms:
        panoptic_mask_for_oracle:
          _target_: torchvision.transforms.Compose
          transforms:
            - _target_: ocl.preprocessing.DenseMaskToTensor
            - _target_: ocl.preprocessing.ResizeNearestExact
              size: ${experiment.mask_size}
            - _target_: torchvision.transforms.CenterCrop
              size: ${experiment.mask_size}
