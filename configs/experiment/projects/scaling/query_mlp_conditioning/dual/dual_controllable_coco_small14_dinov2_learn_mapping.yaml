# @package _global_
# Add masking to ViT feature extractor, use unmasked target feature extractor.
defaults:
  - /experiment/projects/scaling/dual_controllable_coco_small14_dinov2
  - /experiment/projects/scaling/mapping/mlp_mapping
  - /experiment/projects/scaling/_opt/dual_conditioning/mapping_with_dec_conditioning
  - _self_

models:
  dual_conditioning:
    _target_: routed.ocl.conditioning.DualConditioning
    n_slots: ${experiment.num_slots}
    object_dim: ${experiment.slot_dim}
    dual_conditioning: true
    name_embedding_path: input.name_embedding
    point_embedding_path: input.bbox_centroids
    batch_size_path: input.batch_size
    mask_path: input.contrastive_loss_mask

  perceptual_grouping:
      _target_: routed.ocl.perceptual_grouping.ControllableSlotAttentionGrouping
      feature_dim: ${.object_dim}
      object_dim: ${experiment.slot_dim}
      use_projection_bias: false
      positional_embedding:
        _target_: ocl.neural_networks.wrappers.Sequential
        _args_:
          - _target_: ocl.neural_networks.positional_embedding.DummyPositionEmbed
          - _target_: ocl.neural_networks.build_two_layer_mlp
            input_dim: ${experiment.feature_dim}
            output_dim: ${....feature_dim}
            hidden_dim: "${mul: ${experiment.feature_dim}, 2}"
            initial_layer_norm: true
      ff_mlp:
        _target_: ocl.neural_networks.build_two_layer_mlp
        input_dim: ${..object_dim}
        output_dim: ${..object_dim}
        hidden_dim: "${mul: ${..object_dim}, 4}"
        initial_layer_norm: true
        residual: true
      dual_conditioning: true
      feature_path: mapping
      conditioning_path: conditioning
      dual_conditioning_path: dual_conditioning

  decoder_conditioning:
    _target_: routed.ocl.decoder_conditioning.ConcatConditioning
    dim: ${experiment.slot_dim}
    conditioning_dim: 130
    z_path: perceptual_grouping.dual_objects
    conditioning_path: dual_conditioning

  object_decoder:
    _target_: routed.ocl.decoding.ControllablePatchDecoder
    decoder:
      _target_: ocl.neural_networks.build_mlp
      _partial_: true
      features: [2048, 2048, 2048]
    object_dim: ${experiment.slot_dim}
    output_dim: ${experiment.feature_dim}
    num_patches: ${experiment.num_patches}
    object_features_path: perceptual_grouping.objects
    dual_object_features_path: decoder_conditioning
    image_path: input.image
